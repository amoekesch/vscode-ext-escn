{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Eyelit Scenario Script",
    "foldingStartMarker": "(^# ##)|(^#)",
    "foldingStopMarker": "(^# ##$)|(^\\s*$)",
    "patterns": [
        {
            "include": "#functions"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#comments"
        }
    ],
    "repository": {
        "functions": {
            "patterns": [
                {
                    "match": "\\b(ADD_ALL|SORT|LENGTH|SIZE|CURRENT_POSITION|INCR|MOD|DIV|DELAY|PUSH|POP|PEEK|TO_NAME_VALUE|REPLACE_STRING|SPLIT_STRING|XPATH|NESTED_LIST|COALESCE|CONCAT|NEW|ADD|PUT|SET|GET|JAXB|TO_JSON|TO_STRING|TO_DATE|TO_INT|TO_NUMBER)(\\()([^,\\)]{0,})(\\))",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.common.escn"
                        },
                        "2": {
                            "name": "entity.name.function.common.escn"
                        },
                        "3": {
                            "patterns": [{
                                    "include": "#functions"
                                },
                                {
                                    "include": "#keywords"
                                },
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "4": {
                            "name": "entity.name.function.addall.escn"
                        }
                    }
                },
                {
                    "name": "entity.name.function.ifnull.escn",
                    "match": "\\b(IF_NULL)\\b(\\()([^\\~]+)(\\~)([^\\~\\)]+)\\b(\\))",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.ifnull.escn"
                        },
                        "2": {
                            "name": "entity.name.function.ifnull.escn"
                        },
                        "3": {
                            "patterns": [{
                                    "include": "#functions"
                                },
                                {
                                    "include": "#keywords"
                                },
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "4": {
                            "name": "keyword.operator.ifnull.escn"
                        },
                        "5": {
                            "patterns": [{
                                    "include": "#functions"
                                },
                                {
                                    "include": "#keywords"
                                },
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "6": {
                            "name": "entity.name.function.ifnull.escn"
                        }
                    }
                },
                {
                    "match": "\\b(MSG)\\b(\\.)\\b([^\\(]+)\\b(\\()([^\\)]*)(\\))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.msg.escn"
                        },
                        "2": {
                            "name": "keyword.operator.msg.escn"
                        },
                        "3": {
                            "name": "entity.name.function.msg.escn"
                        },
                        "4": {
                            "name": "entity.name.function.msg.escn"
                        },
                        "5": {
                            "patterns": [{
                                    "include": "#functions"
                                },
                                {
                                    "include": "#keywords"
                                },
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "6": {
                            "name": "entity.name.function.msg.escn"
                        }
                    }
                },
                {
                    "name": "support.class.log.escn",
                    "match": "\\b(LOG)(\\()([^\\)]{0,})(\\))",
                    "captures": {
                        "1": {
                            "name": "support.class.log.escn"
                        },
                        "2": {
                            "name": "support.class.log.escn"
                        },
                        "3": {
                            "name": "support.other.log.escn"
                        },
                        "4": {
                            "name": "support.class.log.escn"
                        }
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [{
                    "name": "keyword.other.goto.escn",
                    "match": "\\b(goto|GOTO)\\b"
                },
                {
                    "name": "keyword.control.context.escn",
                    "match": "\\b(CONTEXT|REQUEST|EVT|REQ|DC|TASK_DC|SPCCHART|TASK_SPC|LOT|OBJ)\\b"
                },
                {
                    "name": "support.constant.result.escn",
                    "match": "\\b(RES|RESULT)\\b"
                },
                {
                    "name": "variable.other.loop.escn",
                    "match": "\\b(SCENARIO_LOOP_ELEMENT|SCENARIO_LOOP_CONTROL|SCENARIO_LOOP_ELEMENT|SCENARIO_LOOP_MAX)\\b"
                },
                {
                    "name": "constant.other.symbol.package.escn",
                    "match": "\\b(de|com|net|org|java|javax)\\b\\.+(\\w+\\.?){1,}",
                    "captures": {
                        "1": {
                            "name": "constant.other.symbol.package.escn"
                        },
                        "2": {
                            "name": "constant.other.symbol.package.escn"
                        }
                    }
                },
                {
                    "name": "string.other.keyword.escn",
                    "match": "\\b(EMPTY_VECTOR|EMPTY_STRING|NEWLINE|COMMA|SPACE|null|true|false)\\b"
                },
                {
                    "name": "keyword.operator.escn",
                    "match": "[\\^,.=~|<>!+\"]()"
                },
                {
                    "name": "constant.numeric.escn",
                    "match": "[+-]?([0-9]*[.])?[0-9]+"
                },
                {
                    "name": "support.type.nocache.escn",
                    "match": "(\\/S)"
                },
                {
                    "name": "keyword.control.parameter.escn",
                    "match": "\\b(\\/P|\\/TP|\\/ELE)\\b"
                },
                {
                    "name": "constant.other.symbol.container.escn",
                    "match": "\\b(Action|Action_Category|ActionHub|ActionRequestContainer|ActionRequestTypeContainer|ActionType|Activity|Agent|AR_Status|ArchivePurge|ArchiveRun|Area|Attribute|Basket|Bom|BOMCategory|Calendar|CAP|CAPA|Capa_Category|Capa_Type|Case|CaseList|Cassette|Cassette_Category|CassetteState|CassetteType|Category_Type|ChildConsumableUnit|Condition|Condition_Category|Configuration|Consumable|ConsumableCategory|ConsumableUnit|Context|CPAR_Task|CreateDedicationCode|CreateInhibCode|Criteria|Criteria_Category|Customer|DatabaseColumn|DatabaseTable|DatabaseView|DataSpecification|DecisionHub|DefectCode|DefectCode_Category|Department|Device|Device_Category|Device_Category_Group|DisableDedicationCode|DisableInhibCode|DispatchParameter|DispatchRule|DispatchRuleCategory|DispatchRuleGroup|DocBlobCategory|DocumentBlob|EmploymentStatus|EnableDedicationCode|EnableInhibCode|EncapsulatedEvent|EncapsulatedEventCategory|EncapsulatedEventParameter|EventRedirect|Form|Form_Category|Form_Template|Form_Value|FutureComment|FutureHold|FutureSkipStep|GeneralResourceState|GeneralResourceSubState|Group|HoldCode|ImageMap|ImageMapCategory|Inhibition|Job|JobSchedule|Kpi|KPI_Alert|KPI_Group|LMSRule|Loop|Message|MessageCategory|MfdUnit|MfgStage|MfgStage|MfgStageCategory|ObjectType|Operation|Operation_Category|OperationType|Printer|Product|Product_Category|ProductType|Profile|QPAR_Status|Query|QueryCategory|RDA|Recipe|RecipeCategory|RecipeParameter|RecipeTemplate|RecipeTemplateCategory|ReleaseCode|Report|ReportCategory|Request|Reservation|ResolutionCode|ResolutionCode_Category|Resource_Capability|ResourcePriority|ResourceState|ResourceSubState|Reticle|Reticle_Category|ReticlePod|ReticlePodCategory|ReworkCode|RunValue|SamplingPlan|Scenario|ScenarioCategory|ScrapCode|Shift|SignatureHub|SignatureState|Site|SparePart|SparePartCategory|SPC|SPCAnnotation|SPCCategory|SPCFilter|SplitCode|Step|Step_Category|SubArea|Subject|SubRecipe|SubRecipeCategory|Supplier|SupplierCategory|SWR|SWRSetLotStructDef|SWRStepStructure|Task|TaskOperation|ToolAlarm|ToolAlarmCategory|ToolRelation|ToolRunDataset|ToolTransition|Training_Category|TrainingDocument|TrainingDocumentState|TrainingReviewSchedule|TrainingSchedule|TrainingState|Transaction|TransService|UIEvent|UIEventCategory|UIFilter|UISorter|UITableDescriptor|UnscrapCode|User|User_Category|UserEmploymentStatus|UserSection|UserShift|ValueSpec|Variable|WIPCategory|WIPState|WIPType|Workflow|Workflow_Category|WorkOrder|WorkOrderCategory|WorkOrderElement)\\b"
                },
                {
                    "name": "variable.language.dollar.escn",
                    "match": "\\$"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.preprocessor.escn",
                    "match": "(#)(\\s+{0,})(\\w+:){0,}(.+)",
                    "captures": {
                        "1": {
                            "name": "comment.block.preprocessor.escn"
                        },
                        "2": {
                            "name": "comment.block.preprocessor.escn"
                        },
                        "3": {
                            "name": "comment.block.documentation"
                        },
                        "4": {
                            "name": "comment.block.preprocessor.escn"
                        }
                    }
                }
            ]
        }
    },
    "scopeName": "source.eyelit.scenario.escn"
}
